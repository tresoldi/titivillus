[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "titivillus"
dynamic = ["version"]
description = "Synthetic phylogenetic data generator for algorithm testing and validation"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Titivillus Development Team", email = "contact@titivillus.org"},
]
keywords = ["phylogenetics", "synthetic-data", "bioinformatics", "linguistics", "cultural-evolution"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "PyYAML>=6.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
plotting = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]
fast = [
    "numba>=0.56.0",
]

[project.scripts]
titivillus = "titivillus.cli:main"

[project.urls]
Homepage = "https://github.com/titivillus/titivillus"
Documentation = "https://github.com/titivillus/titivillus/wiki"
Repository = "https://github.com/titivillus/titivillus.git"
Issues = "https://github.com/titivillus/titivillus/issues"

[tool.setuptools.dynamic]
version = {attr = "titivillus.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["titivillus*"]

[tool.setuptools.package-data]
titivillus = ["config/*.yaml", "examples/*.yaml", "templates/*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]